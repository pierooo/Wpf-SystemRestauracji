<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:SystemRestauracji.ViewModels"
                    xmlns:vw="clr-namespace:SystemRestauracji.Views"
                    >

    <!--tu bedziemy laczyc View z ViewModel zakładek-->
   
    <DataTemplate DataType="{x:Type vm:WszystkieTowaryViewModel}">
        <vw:WszystkieTowaryView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:NowyTowarViewModel}">
        <vw:NowyTowarView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:NowaFakturaViewModel}">
        <vw:NowaFakturaView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:NoweZamowienieViewModel}">
        <vw:NoweZamowienieView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:ZakonczZamowienieViewModel}">
        <vw:ZakonczZamowienieView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:MojeOtwarteZamowieniaViewModel}">
        <vw:MojeOtwarteZamowieniaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:MojeZamknieteZamowieniaViewModel}">
        <vw:MojeZamknieteZamowieniaView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:WszystkieFakturyViewModel}">
        <vw:WszystkieFakturyView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:ZamknijZmianeViewModel}">
        <vw:ZamknijZmianeView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieKategorieViewModel}">
        <vw:WszystkieKategorieView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaKategoriaViewModel}">
        <vw:NowaKategoriaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:DodajProduktDoKategoriiViewModel}">
        <vw:DodajProduktDoKategoriiView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieStolikiViewModel}">
        <vw:WszystkieStolikiView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:DodajStolikViewModel}">
        <vw:DodajStolikView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieZamowieniaViewModel}">
        <vw:WszystkieZamowieniaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:TaZmianaZamowieniaViewModel}">
        <vw:TaZmianaZamowieniaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:MagazynProduktowViewModel}">
        <vw:MagazynProduktowView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyDostawcaViewModel}">
        <vw:NowyDostawcaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszyscyDostawcyViewModel}">
        <vw:WszyscyDostawcyView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieWynagrodzeniaViewModel}">
        <vw:WszystkieWynagrodzeniaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:DaneRestauracjiViewModel}">
        <vw:DaneRestauracjiView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:GrafikViewModel}">
        <vw:GrafikView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszyscyPracownicyViewModel}">
        <vw:WszyscyPracownicyView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyPracownikViewModel}">
        <vw:NowyPracownikView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieDrukarkiViewModel}">
        <vw:WszystkieDrukarkiView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieRezerwacjeViewModel}">
        <vw:WszystkieRezerwacjeView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:MojaZmianaViewModel}">
        <vw:MojaZmianaView/>
    </DataTemplate>

    <!--tu jest koniec laczenia View z ViewModel zakładek-->

    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                   
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
  This style ensures that the borders in the main window are consistent.
  -->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <Style x:Key="stylePaskaNarzedzi" TargetType="{x:Type ToggleButton}">
        <Setter Property="Height" Value="33"/>
        <Setter Property="Width" Value="33"/>
        <Setter Property="Margin" Value="15,0,15,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderThickness="0" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--
  This template explains how to render the list of commands on the left
  side in the main window (the 'Control Panel' area).
  -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Content="{Binding DisplayName}" Command="{Binding Path=Command}" Margin="6" Padding="5" Background="AliceBlue" BorderThickness="0"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="190" Background="AliceBlue">
            <Button 
        Command="{Binding Path=CloseCommand}"
        Content="X"
        Cursor="Hand"
        DockPanel.Dock="Right"
        Focusable="False"
        FontFamily="Courier" 
        FontSize="9"
        FontWeight="Bold"  
        Margin="0,1,0,0"
        Padding="0"
        VerticalContentAlignment="Bottom"
        Width="15" Height="15" 
        />
            <ContentPresenter 
        Content="{Binding Path=DisplayName}" 
        VerticalAlignment="Center" 
        />
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
      IsSynchronizedWithCurrentItem="True" 
      ItemsSource="{Binding}" 
      ItemTemplate="{StaticResource ClosableTabItemTemplate}"
      Margin="0"
      />
    </DataTemplate>


</ResourceDictionary>